# Example workflow for users to copy
# This file shows how to use OQOQO Bot in your repository

name: OQOQO Bot

on:
  pull_request:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write

jobs:
  # Analyze PRs automatically
  analyze:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for Hot-Path analysis

      # Use OQOQO Bot Action
      - uses: YOUR_USERNAME/oqoqo-bot@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-llm: 'true'
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          # OR use Anthropic:
          # anthropic-api-key: ${{ secrets.ANTHROPIC_API_KEY }}
          docs-dir: 'docs'

  # Generate documentation with /update-docs command
  update-docs:
    if: >
      github.event_name == 'issue_comment' &&
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/update-docs')
    runs-on: ubuntu-latest
    steps:
      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            core.setOutput('ref', pr.data.head.ref);
            core.setOutput('sha', pr.data.head.sha);
            core.setOutput('base_sha', pr.data.base.sha);

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.pr.outputs.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      # Use OQOQO Bot Action in update-docs mode
      - uses: YOUR_USERNAME/oqoqo-bot@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          mode: 'update-docs'
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          docs-dir: 'docs'
